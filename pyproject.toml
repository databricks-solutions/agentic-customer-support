[project]
name = "telco-support-agent"
version = "0.1.0"
description = "Production-grade AI-powered telco customer support Agent System built on Databricks"
authors = [{ name = "Databricks", email = "agents@databricks.com" }]
requires-python = ">=3.12,<3.13.dev0"
readme = "README.md"
dependencies = [
    "pydantic>=2.10.0,<3",
    "faker>=20.1.0,<21",
    "databricks-sdk==0.52.0",
    "mlflow[databricks]>=3.1",
    "openai>=1.78.0,<2",
    "backoff>=2.2.1,<3",
    "six==1.16.0",
    "unitycatalog-ai[databricks]>=0.3.0,<0.4",
    "unitycatalog-openai[databricks]>=0.2.0,<0.3",
    "databricks-agents>=1.1.0,<2",
    "databricks-vectorsearch>=0.56.0,<0.57",
    "databricks-openai==0.4.1",
    "databricks-mcp==0.2.1",
]

[dependency-groups]
dev = [
    "pytest>=7.4.0,<8",
    "ruff>=0.11.9,<0.12",
    "mypy>=1.7.0,<2",
    "ipykernel>=6.26.0,<7",
    "pre-commit>=3.7.1,<4",
]

[tool.hatch.build.targets.sdist]
include = ["telco_support_agent"]

[tool.hatch.build.targets.wheel]
include = ["telco_support_agent"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
line-length = 88

# Exclude directories and files
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "notebooks",
    "notebooks/**",
    "*.ipynb",
    ".pytest_cache",
    "dist",
]

[tool.ruff.lint]
# Enable specific rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "S",   # flake8-bandit (security)
    "ICN", # flake8-import-conventions
]

# Ignore specific rules
ignore = [
    "E501",    # line too long (handled by Ruff formatter)
    "B008",    # function call in default arg
    "D100",    # Missing docstring in public module
    "D101",    # Missing docstring in public class
    "D107",    # Missing docstring in __init__
    "S101",    # Use of assert (common in tests)
    "N805",    # First argument of a method should be named `self`
    "N812",    # Lowercase method imported as non-lowercase
    "UP007",   # Use `X | Y` for type annotations - ignoring to support Python <3.10
    "UP045",   # Use `X | None` for type annotations - ignoring to support older style
    "S608"
]

[tool.ruff.lint.pydocstyle]
convention = "google"  # Google-style docstrings

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore unused imports in __init__.py
"tests/**" = ["S101", "D"]  # Ignore assert usage and docstring issues in tests
"notebooks/**" = ["E", "W", "F", "I", "D"]  # Relaxed rules for notebooks

[tool.ruff.lint.isort]
known-first-party = ["telco_support_agent"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
combine-as-imports = true
split-on-trailing-comma = true

[tool.ruff.format]
quote-style = "double"  # Use double quotes consistently
indent-style = "space"
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
