name: Prod Databricks Infra CI/CD

on:
  push:
    branches:
      - release
env:
  DATABRICKS_CLIENT_ID: ${{secrets.PROD_DATABRICKS_CLIENT_ID}}
  DATABRICKS_CLIENT_SECRET: ${{secrets.PROD_DATABRICKS_CLIENT_SECRET}}
  DATABRICKS_BUNDLE_TARGET: prod

jobs:
  deploy:
    name: Deploy pipeline
    environment: prod
    runs-on:
      group: databricks-field-eng-protected-runner-group
      labels: linux-ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Setup databricks CLI
        uses: databricks/setup-cli@main
      - name: Validate bundle for prod
        id: validate
        run: |
          databricks bundle validate
      - name: Deploy Bundle to prod
        id: deploy
        run: |
          databricks bundle deploy

      - name: Check for MCP Server Changes
        id: mcp-server-changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep '^telco_support_agent/mcp_servers/outage_info_server/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy MCP Server App
        if: steps.mcp-server-changes.outputs.changed == 'true'
        run: |
          echo "MCP server changes detected. Deploying code to app..."
          databricks bundle run outage_info_mcp_server -t prod
          echo "MCP server app code deployed successfully"

      - name: Post Deployment Summary
        if: always()
        run: |
          echo "## Production Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Production" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **MCP Server**: ${{ steps.mcp-server-changes.outputs.changed == 'true' && 'Updated' || 'No changes' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸš€ Production deployment completed." >> $GITHUB_STEP_SUMMARY
  # run_pipeline:
  #   name: Run pipeline
  #   environment: prod
  #   runs-on:
  #     group: databricks-field-eng-protected-runner-group
  #     labels: linux-ubuntu-latest
  #   needs:
  #     - deploy
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha || github.sha }}
  #     - name: Setup databricks CLI
  #       uses: databricks/setup-cli@main
  #     - name: Run bundle for prod
  #       id: run
  #       run: |
  #         databricks bundle run log_register_deploy_agent
