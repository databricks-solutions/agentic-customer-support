name: Staging UI Deploy

on:
  push:
    branches: [ main ]
    paths: [ 'ui/**' ]
  workflow_run:
    workflows: ["Staging Databricks Infra CI/CD"]
    types: [completed]
    branches: [ main ]
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual deployment'
        required: false
        default: 'Manual staging deployment'

env:
  DATABRICKS_CLIENT_ID: ${{secrets.STAGING_DATABRICKS_CLIENT_ID}}
  DATABRICKS_CLIENT_SECRET: ${{secrets.STAGING_DATABRICKS_CLIENT_SECRET}}

jobs:
  deploy-ui:
    name: Deploy UI to Staging
    environment: staging
    runs-on:
      group: databricks-field-eng-protected-runner-group
      labels: linux-ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'ui/frontend/package-lock.json'
          
      - name: Install frontend dependencies
        working-directory: ui/frontend
        run: |
          npm ci --prefer-offline --no-audit
          
      - name: Build frontend
        working-directory: ui/frontend
        run: |
          npm run build
          
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main
          
      - name: Deploy UI App
        working-directory: ui
        run: |
          chmod +x deploy.sh
          ./deploy.sh staging staging
          
      - name: Verify Deployment
        run: |
          # Wait for deployment to register
          sleep 60
          # Check if app is running
          databricks apps get telco-support-agent-staging --profile staging