name: Staging Databricks Infra CI/CD

on:
  push:
    branches:
      - main
env:
  DATABRICKS_CLIENT_ID: ${{secrets.STAGING_DATABRICKS_CLIENT_ID}}
  DATABRICKS_CLIENT_SECRET: ${{secrets.STAGING_DATABRICKS_CLIENT_SECRET}}
  DATABRICKS_BUNDLE_TARGET: staging

jobs:
  deploy:
    name: Deploy pipeline
    environment: staging
    runs-on:
      group: databricks-field-eng-protected-runner-group
      labels: linux-ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
      - name: Setup databricks CLI
        uses: databricks/setup-cli@main
      - name: Validate bundle for staging
        id: validate
        run: |
          databricks bundle validate
      - name: Deploy bundle to staging
        id: deploy
        run: |
          databricks bundle deploy

      - name: Check for MCP Server Changes
        id: mcp-server-changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep '^telco_support_agent/mcp_servers/outage_info_server/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy MCP Server App
        if: steps.mcp-server-changes.outputs.changed == 'true'
        run: |
          echo "MCP server changes detected. Deploying code to app..."
          databricks bundle run mcp-outage-info-server -t staging
          echo "MCP server app code deployed successfully"

      - name: Post Deployment Summary
        if: always()
        run: |
          echo "## Staging Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Staging" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **MCP Server**: ${{ steps.mcp-server-changes.outputs.changed == 'true' && 'Updated' || 'No changes' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Ready for production deployment when release tag is created." >> $GITHUB_STEP_SUMMARY
