name: Staging - Deploy Databricks Resources

on:
  workflow_dispatch:
    inputs:
      deploy_apps:
        description: 'Deploy app code (MCP servers, UI)'
        required: false
        default: false
        type: boolean
  push:
    branches: ["main"]

jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"          
          
      - uses: databricks/setup-cli@main
  
      - name: Validate Bundle
        env:
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
        run: |
          echo "Validating bundle configuration..."
          databricks bundle validate -t staging

      - name: Deploy to Staging
        env:
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
        run: |
          echo "Deploying to staging environment..."
          databricks bundle deploy -t staging
          echo "Deployment to staging completed successfully"

      - name: Check for App Changes
        id: app-changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E '^(telco_support_agent/mcp_servers/|telco_support_agent/ui/)'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy App Code
        if: ${{ github.event.inputs.deploy_apps == true && (steps.app-changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch') }}
        env:
          DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
          DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
        run: |
          echo "Deploying app code..."
          
          # Deploy MCP server app
          echo "Deploying MCP server..."
          databricks bundle run outage_info_mcp_server -t staging
          
          # Deploy UI app  
          echo "Deploying UI app..."
          databricks bundle run customer_support_ui -t staging
          
          echo "App code deployed successfully"

      - name: Post Deployment Summary
        if: always()
        run: |
          echo "## Staging Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: Staging" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **App Changes**: ${{ steps.app-changes.outputs.changed == 'true' && 'Detected' || 'None' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Apps Deployed**: ${{ github.event.inputs.deploy_apps == true && 'Yes' || 'No' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Ready for production deployment when release tag is created." >> $GITHUB_STEP_SUMMARY